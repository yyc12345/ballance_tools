<Application x:Class="Application"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ballance_tools"
    StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!-- ************************************************************************************************-->
        <!-- 各个系统的颜色背景-->
        <SolidColorBrush x:Key="ui_temp_windows10_item_bk" Color="#5f6495ed"/>
        <SolidColorBrush x:Key="ui_temp_windows7_item_bk" Color="#7fffffff"/>

        <!-- 重要===设定listbox item的选中色样式-->
        <Style TargetType="ListBoxItem">
            <Style.Resources>
                <!--SelectedItem with focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" Opacity=".4"/>
                <!--SelectedItem without focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" Opacity=".4"/>
            </Style.Resources>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <!-- 设置触发器 -->
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#efefef"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Background" Value="Coral"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <!-- ************************************************************************************************-->
        <Style TargetType="{x:Type TabItem}" x:Key="tab_temp_1">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Background="#00000000" Width="42" Height="60">
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="2"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions >
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>


                            <Grid Background="{TemplateBinding BorderBrush}" Grid.Row="1">
                                <Grid.ToolTip>
                                    <Grid >
                                        <TextBlock Foreground="black" FontSize="15" Text="{TemplateBinding Header}"/>
                                    </Grid>
                                </Grid.ToolTip>
                            </Grid>

                            <Grid Background="{TemplateBinding Background}" Grid.Column="1" Grid.RowSpan="3"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#ffffffff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="#00000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TabItem}" x:Key="tab_temp_2">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Background="#00000000" Width="100">
                            <Grid.RowDefinitions >
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="2"/>
                            </Grid.RowDefinitions>
                            <TextBlock Foreground="White" FontSize="15" Text="{TemplateBinding Header}" TextAlignment="Center">
                                <TextBlock.ToolTip >
                                    <Grid >
                                        <TextBlock Foreground="black" FontSize="15" Text="{TemplateBinding Header}"/>
                                    </Grid>
                                </TextBlock.ToolTip>
                            </TextBlock>

                            <Grid Grid.Row="2" Background="{TemplateBinding Background}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers >
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#ffffffff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="#00000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
            <Grid>
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                
                <Grid x:Name="face" Background="#ff000000" Opacity="0"/>
                
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                   
                <!--<Border.Effect>
        <DropShadowEffect BlurRadius="10" Color="#FFffffff" ShadowDepth="0" />
    </Border.Effect>-->
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" TargetName="face" Value="0.1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" TargetName="face" Value="0.2"/>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}"/>
        </Style>


        <!-- ************************************************************************************************-->
        <!-- 关卡-检测列表的模板-->
        <DataTemplate x:Key="ui_temp_form_level_form_check_list">
            <Grid Height="50" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_level_name}" TextAlignment="Center"/>
                <TextBlock Grid.Column="2" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_level_path}" TextAlignment="Center"/>
                <TextBlock Grid.Column="4" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_map_name}" TextAlignment="Center"/>

            </Grid>
        </DataTemplate>

        <!-- 关卡-地图列表的模板-->
        <DataTemplate x:Key="ui_temp_form_level_form_level_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.RowSpan="15" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

                <TextBlock Grid.Column="3" Grid.Row="1" Foreground="white" FontSize="20" Text="{Binding pro_title}"/>
                <Expander Header="详细信息" Grid.Column="3" Grid.Row="3" Foreground="White" FontSize="15">
                    <Grid Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="2" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_creator}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_creator}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="3" Foreground="white" FontSize="15" Width="200" Text="{Binding pro_description}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_description}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="5" Foreground="white" FontSize="15" Text="{Binding pro_difficulty}" >
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_difficulty}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="7" Foreground="white" FontSize="15" Text="{Binding pro_playcount}" >
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_playcount}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="9" Foreground="white" FontSize="15" Text="{Binding pro_stars}" >
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_stars}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="11" Foreground="white" FontSize="15" Text="{Binding pro_downloadcount}" >
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_downloadcount}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </Grid>
                </Expander>


            </Grid>
        </DataTemplate>

        <!-- 关卡-英雄榜列表的模板-->
        <DataTemplate x:Key="ui_temp_form_level_form_hero_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.RowSpan="15" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_user_image}" Stroke="{Binding pro_background}" StrokeThickness="5"/>
                </Grid>

                <Grid Grid.Column="2" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Foreground="white" FontSize="20" Text="{Binding pro_player}"/>
                    <TextBlock Grid.Column="2" Foreground="LightBlue"  FontSize="20" Text="{Binding pro_point}"/>
                    <TextBlock Grid.Column="4" Foreground="red" FontSize="15" Text="{Binding pro_exter_point}"/>
                </Grid>

                <Grid Grid.Column="2" Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Foreground="white" FontSize="15" Text="{Binding pro_creat_time}"/>
                    <TextBlock Grid.Column="2" Foreground="LightBlue" FontSize="15" Text="{Binding pro_time}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->
        <!-- nmo-mod包列表的模板-->
        <DataTemplate x:Key="ui_temp_form_nmo_form_mod_mod_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.RowSpan="15" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

                <TextBlock Grid.Column="3" Grid.Row="1" Foreground="white" FontSize="20" Text="{Binding pro_title}"/>
                <Expander Header="详细信息" Grid.Column="3" Grid.Row="3" Foreground="White" FontSize="15">
                    <Grid Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="2" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_name}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_name}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="3" Foreground="white" FontSize="15" Text="{Binding pro_pid}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_pid}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="5" Foreground="white" FontSize="15" Text="{Binding pro_creator}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_creator}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="7" Foreground="white" Width="200" FontSize="15" Text="{Binding pro_describe}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_describe}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </Grid>
                </Expander>


            </Grid>
        </DataTemplate>

        <!-- nmo-模组包列表的模板-->
        <DataTemplate x:Key="ui_temp_form_nmo_form_mod_ph_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.RowSpan="15" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

                <TextBlock Grid.Column="3" Grid.Row="1" Foreground="white" FontSize="20" Text="{Binding pro_title}"/>
                <Expander Header="详细信息" Grid.Column="3" Grid.Row="3" Foreground="White" FontSize="15">
                    <Grid Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Column="2" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_name}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_name}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="3" Foreground="white" FontSize="15" Text="{Binding pro_pid}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_pid}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="5" Foreground="white" FontSize="15" Text="{Binding pro_creator}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_creator}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="7" Foreground="white" Width="200" FontSize="15" Text="{Binding pro_describe}">
                            <TextBlock.ToolTip>
                                <Grid Background="White" Width="200">
                                    <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_describe}" TextWrapping="Wrap"/>
                                </Grid>
                            </TextBlock.ToolTip>
                        </TextBlock>
                    </Grid>
                </Expander>


            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->
        <!-- 图片-材质包列表的模板-->
        <DataTemplate x:Key="ui_temp_form_photo_form_material_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="White" FontSize="15" Grid.Column="3" Grid.Row="1" Text="{Binding pro_title}"/>

                <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

            </Grid>
        </DataTemplate>

        <!-- 图片-背景包列表的模板-->
        <DataTemplate x:Key="ui_temp_form_photo_form_background_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="White" FontSize="15" Grid.Column="3" Grid.Row="1" Text="{Binding pro_title}"/>

                <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->
        <!-- 音乐-音效包列表的模板-->
        <DataTemplate x:Key="ui_temp_form_wave_form_wave_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="White" FontSize="15" Grid.Column="3" Grid.Row="1" Text="{Binding pro_title}"/>

                <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

            </Grid>
        </DataTemplate>

        <!-- 音乐-bgm包列表的模板-->
        <DataTemplate x:Key="ui_temp_form_wave_form_bgm_list">
            <Grid Height="auto" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="White" FontSize="15" Grid.Column="3" Grid.Row="1" Text="{Binding pro_title}"/>

                <Grid Grid.Row="0" Grid.RowSpan="3" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Ellipse Grid.Row="1" Fill="{Binding pro_image}" Stroke="white"/>
                </Grid>

            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->

        <!-- 设置-检测本地排行榜的模板-->
        <DataTemplate x:Key="ui_temp_form_setting_form_local_hero_list">
            <Grid Height="50" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_name}"/>
                <TextBlock Grid.Column="3" Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding pro_score}"/>

            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->

        <!-- 设置-本地排行榜备份列表的模板-->
        <DataTemplate x:Key="ui_temp_form_setting_form_local_hero_backups_list">
            <Grid Height="50" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="White" FontSize="15" Grid.Column="1" Grid.Row="1" Text="{Binding pro_title}"/>

            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->

        <!-- 联机对战-加入服务器人员列表的模板-->
        <DataTemplate x:Key="ui_temp_form_web_form_people_list">
            <Grid Height="50" Background="{DynamicResource ui_temp_windows10_item_bk}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>

                <TextBlock Foreground="White" FontSize="15" Grid.Column="1" Grid.Row="1" Text="{Binding pro_name}" HorizontalAlignment="Center"/>
                <TextBlock Foreground="White" FontSize="15" Grid.Column="3" Grid.Row="1" Text="{Binding pro_ip}" HorizontalAlignment="Center"/>
                <TextBlock Foreground="White" FontSize="15" Grid.Column="5" Grid.Row="1" Text="{Binding pro_port}" HorizontalAlignment="Center"/>
                <TextBlock Foreground="White" FontSize="15" Grid.Column="7" Grid.Row="1" Text="{Binding pro_state}" HorizontalAlignment="Center"/>

            </Grid>
        </DataTemplate>

        <!-- ************************************************************************************************-->

        <!-- 窗口-选择项目的模板-->
        <DataTemplate x:Key="ui_temp_window_select_item_list">
            <Grid Height="80">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- 选中圆圈-->
                <Grid Grid.Row="2" Grid.Column="0" Height="20" Width="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Ellipse Fill="#00000000" Stroke="#ff1e90ff"/>
                    <Ellipse Fill="{Binding pro_fill}" Stroke="#00000000" Margin="5"/>
                </Grid>


                <!-- 文本-->
                <Grid Grid.Row="1" Grid.RowSpan="3" Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" Foreground="black" FontSize="15" Text="{Binding pro_title}">
                        <TextBlock.ToolTip>
                            <Grid Background="White">
                                <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_title}"/>
                            </Grid>
                        </TextBlock.ToolTip>
                    </TextBlock>

                    <TextBlock Grid.Row="3" Foreground="black" FontSize="12" Text="{Binding pro_text}">
                        <TextBlock.ToolTip>
                            <Grid Background="White">
                                <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_text}"/>
                            </Grid>
                        </TextBlock.ToolTip>
                    </TextBlock>


                </Grid>

            </Grid>
        </DataTemplate>


        <!-- 滚动条-->

        <!-- 滚动条模板-->
        <ControlTemplate x:Key="ScrollBarControlTemplateHorizontal" TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Bg" SnapsToDevicePixels="True" Height ="10">
                <Grid.ColumnDefinitions>
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <ColumnDefinition Width ="1E-05*"/>
                </Grid.ColumnDefinitions>
                <Grid Opacity="0.5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="5"/>
                    </Grid.ColumnDefinitions>
                    <Ellipse Fill="#ffffffff" Grid.Column="0" Grid.ColumnSpan="2" StrokeThickness="0"/>
                    <Rectangle x:Name="rectangle" Grid.Column="1" Grid.ColumnSpan="3" Fill="#ffffffff" SnapsToDevicePixels="True" Height="10" StrokeThickness="0"/>
                    <Ellipse Fill="#ffffffff" Grid.Column="3" Grid.ColumnSpan="2" StrokeThickness="0"/>
                </Grid>
                <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="0"/>-->
                <!--<RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <!--<RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <Track x:Name="PART_Track" IsDirectionReversed="False" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb>
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="5"/>
                                                        <ColumnDefinition Width="5"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="5"/>
                                                        <ColumnDefinition Width="5"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Column="0" Grid.ColumnSpan="2" StrokeThickness="0"/>
                                                    <Rectangle x:Name="rectangle" Grid.Column="1" Grid.ColumnSpan="3" Fill="#FF1e90ff" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" StrokeThickness="0"/>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Column="3" Grid.ColumnSpan="2" StrokeThickness="0"/>
                                                </Grid>
                                                <!--<Rectangle x:Name="rectangle" Fill="#FF1e90ff" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>-->
                                                <!--<ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>-->
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
            <!--<ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ScrollBarControlTemplate" TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Bg" SnapsToDevicePixels="True" Width="10">
                <Grid.RowDefinitions>
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <RowDefinition Height="1E-05*"/>
                </Grid.RowDefinitions>
                <Grid Opacity="0.5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="5"/>
                    </Grid.RowDefinitions>
                    <Ellipse Fill="#ffffffff" Grid.Row="0" Grid.RowSpan="2" StrokeThickness="0"/>
                    <Rectangle x:Name="rectangle" Grid.Row="1" Grid.RowSpan="3" Fill="#ffffffff" SnapsToDevicePixels="True" Width="10" StrokeThickness="0"/>
                    <Ellipse Fill="#ffffffff" Grid.Row="3" Grid.RowSpan="2" StrokeThickness="0"/>
                </Grid>
                <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#3f7f7f7f" Grid.Row="0"/>-->
                <!--<RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <!--<RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb>
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="5"/>
                                                        <RowDefinition Height="5"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="5"/>
                                                        <RowDefinition Height="5"/>
                                                    </Grid.RowDefinitions>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Row="0" Grid.RowSpan="2" StrokeThickness="0"/>
                                                    <Rectangle x:Name="rectangle" Grid.Row="1" Grid.RowSpan="3" Fill="#FF1e90ff" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" StrokeThickness="0"/>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Row="3" Grid.RowSpan="2" StrokeThickness="0"/>
                                                </Grid>

                                                <!--<ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>-->
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
            <!--<ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <!-- 滚动条面板模板-->

        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Template="{DynamicResource ScrollBarControlTemplate}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Template="{DynamicResource ScrollBarControlTemplateHorizontal}"/>
            </Grid>
        </ControlTemplate>

        <!-- 滚动条样式style-->
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplateHorizontal}"/>
            <Style.Triggers >
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplateHorizontal}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
